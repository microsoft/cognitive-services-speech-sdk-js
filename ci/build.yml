#
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT license.
#

trigger:
- master

pr:
- master

resources:
- repo: self
  clean: true

jobs:
- job: Build
  pool:
    name: $(WindowsPipelineName)
  timeoutInMinutes: 60
  variables:
    ArtifactOut: $(Build.ArtifactStagingDirectory)/Out/JavaScript
  steps:
  - bash: ./ci/check-git-head.sh
    displayName: Repository checks
  - task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
    displayName: Component Detection
    condition: >
      and(eq(variables['System.CollectionId'], '26f8e8b1-373f-4f65-96fc-d17a59b38306'),
        eq(variables['System.DefinitionId'], '198'),
        eq(variables['Build.SourceBranch'], 'refs/heads/master'),
        or(eq(variables['Build.Reason'], 'Schedule'), eq(variables['Build.Reason'], 'Manual')))
  - bash: |
      npm ci && npm run civersion
      echo "COLLECTION_ID=$(System.CollectionId)"
      echo "DEFINITION_ID=$(System.DefinitionId)"
      echo "SDK version = $SPEECHSDK_SEMVER2NOMETA"
    displayName: Install packages and set version / SPEECHSDK_SEMVER2NOMETA
  - bash: |
      F=src/common.speech/SpeechServiceConfig.ts
      [[ -f $F ]] || exit 1
      perl -i.bak -p -e 'BEGIN { $c = 0 } $c += s/(?<=const SPEECHSDK_CLIENTSDK_VERSION = ")[^"]*/$(SPEECHSDK_SEMVER2NOMETA)/g; END { die "Patched SPEECHSDK_CLIENTSDK_VERSION $c time(s), expected 1.\n" if $c != 1 }' "$F"
      E=$?
      rm -f "$F.bak"
      git diff
      exit $E
    displayName: Stamp SPEECHSDK_CLIENTSDK_VERSION
  - bash: npm pack
    displayName: Build and pack SDK
  - bash: "echo '##vso[task.setvariable variable=SPEECHSDK_RUN_TESTS]false'"
    condition: or(failed(), canceled())
    displayName: Skip tests on build failure
  - script: |
      RunTests.cmd ^
        SpeechSubscriptionKey:$(WestCentralUSKeySkyMan) ^
        SpeechRegion:westcentralus ^
        LuisSubscriptionKey:$(luis-westus-s0-201809-key1) ^
        LuisRegion:westus ^
        SpeechTestEndpointId:ec3432b2-8584-4736-865a-556213b9f6fd ^
        BotSubscription:$(DialogSubscriptionKey) ^
        BotRegion:$(DialogRegion) ^
        SpeakerIDSubscriptionKey:$(SpeakerRecognition-WestUS-Key) ^
        SpeakerIDRegion:westus ^
        ConversationTranscriptionKey:$(ConverstationTranscriptionKeyWestUSOnline) ^
        ConversationTranscriptionRegion:westus ^
        CustomVoiceSubscriptionKey:$(speech-ne-s0-key1) ^
        CustomVoiceRegion:northeurope
    displayName: Run tests
    condition: eq(variables['SPEECHSDK_RUN_TESTS'], 'true')
  - task: PublishTestResults@2
    displayName: Publish test results
    inputs:
      testRunner: JUnit
      testResultsFiles: 'test-javascript-junit.xml'
    condition: eq(variables['SPEECHSDK_RUN_TESTS'], 'true')
  - bash: |
        set -e
        cd tests/packaging
        echo "SDK version = $SPEECHSDK_SEMVER2NOMETA"
        npm ci
        npm install ../../microsoft-cognitiveservices-speech-sdk-$SPEECHSDK_SEMVER2NOMETA.tgz
        npm run bundle
    displayName: Run Test Bundle
    condition: eq(variables['SPEECHSDK_RUN_TESTS'], 'true')
  - bash: |
      set -u -e -o pipefail -x
      PACKAGE_BASE=microsoft-cognitiveservices-speech-sdk
      PACKAGE_NAME=$PACKAGE_BASE-$SPEECHSDK_SEMVER2NOMETA.tgz
      PACKAGE_IN=$PACKAGE_NAME
      PACKAGE_OUT="$(ArtifactOut)/npm"
      ZIP_OUT="$(ArtifactOut)/SpeechSDK-JavaScript-$SPEECHSDK_SEMVER2NOMETA"
      mkdir -p "$PACKAGE_OUT" "$ZIP_OUT"
      cp --preserve "$PACKAGE_IN" "$PACKAGE_OUT"
      echo SRI hash for microsoft.cognitiveservices.speech.sdk.bundle.js: sha512-"$(openssl dgst -sha512 -binary distrib/browser/microsoft.cognitiveservices.speech.sdk.bundle.js | openssl base64 -A)"
      cp --preserve LICENSE REDIST.txt NOTICE.txt distrib/browser/microsoft.cognitiveservices.speech.sdk.bundle.* distrib/browser/microsoft.cognitiveservices.speech.sdk.bundle-min.* distrib/browser/speech-processor.js "$ZIP_OUT"
    displayName: Create drop
  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: $(ArtifactOut)/SpeechSDK-JavaScript-$(SPEECHSDK_SEMVER2NOMETA)
      includeRootFolder: true
      archiveType: zip
      archiveFile: $(ArtifactOut)/SpeechSDK-JavaScript-$(SPEECHSDK_SEMVER2NOMETA).zip
    displayName: Create .zip
  - bash: rm -rf "$(ArtifactOut)/SpeechSDK-JavaScript-$(SPEECHSDK_SEMVER2NOMETA)"
    displayName: Remove temporary directory
  - task: PublishBuildArtifacts@1
    displayName: Publish drop
    inputs:
      PathtoPublish: $(ArtifactOut)
      ArtifactName: JavaScript
      publishLocation: Container
